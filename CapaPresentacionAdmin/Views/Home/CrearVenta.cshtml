@{
    ViewBag.Title = "CrearVenta";
}
<div class="modal-body mt-3">
    <h5>Crear Venta Externa</h5>

    <!-- Seleccionar Cliente -->
    <div class="mb-3">
        <label for="selectCliente" class="form-label">Seleccionar Cliente</label>
        <select id="selectCliente" class="form-select">
            <option value="">Seleccione un Cliente</option>
        </select>
    </div>

    <!-- Seleccionar Localidad -->
    <div class="mb-3">
        <label for="selectLocalidad" class="form-label">Seleccionar Localidad</label>
        <select id="selectLocalidad" class="form-select">
            <option value="">Seleccione una Localidad</option>
        </select>
    </div>

    <!-- Seleccionar Producto -->
    <div class="mb-3">
        <label for="selectProducto" class="form-label">Seleccionar Producto</label>
        <select id="selectProducto" class="form-select">
            <option value="">Seleccione un Producto</option>
        </select>
    </div>

    <!-- Cantidad de Productos -->
    <div class="mb-3">
        <label for="txtCantidad" class="form-label">Cantidad</label>
        <input type="number" class="form-control" id="txtCantidad" min="1" value="1">
    </div>

    <!-- Botón para agregar producto -->
    <div class="mb-3">
        <button type="button" class="btn btn-secondary" onclick="agregarProductoSeleccionado()">Agregar Producto</button>
    </div>

    <!-- Total Pago -->
    <div class="mb-3">
        <label for="visibleTotalPago" class="form-label">Total Pago</label>
        <input type="text" id="visibleTotalPago" class="form-control" readonly />
        <input type="hidden" id="hiddenTotalPago" name="hiddenTotalPago" />
    </div>

    <!-- Listado de Productos Seleccionados -->
    <div class="mb-3">
        <h6>Productos Seleccionados:</h6>
        <ul id="listaProductosSeleccionados"></ul>
    </div>

    <!-- Botón para crear venta -->
    <div class="text-end">
        <button type="button" class="btn btn-primary" onclick="crearVenta()">Guardar Venta</button>
    </div>
</div>

@section scripts {
    <script>
        var productosSeleccionados = []; // Array para almacenar productos seleccionados

        $(document).ready(function () {
            cargarProductos();
            cargarLocalidades();
            cargarClientes();
        });

        function cargarClientes() {
            $.ajax({
                url: '@Url.Action("ListarClientes", "Home")',
                type: "GET",
                dataType: "json",
                success: function (response) {
                    $("#selectCliente").empty();
                    $("#selectCliente").append('<option value="">Seleccione un Cliente</option>');
                    $.each(response.data, function (index, item) {
                        $("<option>").attr({ "value": item.Id_Cliente }).text(item.Nombre).appendTo("#selectCliente");
                    });
                },
                error: function (error) {
                    console.log("Error al cargar clientes:", error);
                }
            });
        }

        function cargarLocalidades() {
            $.ajax({
                url: '@Url.Action("ListarLocalidad", "Home")',
                type: "GET",
                dataType: "json",
                success: function (response) {
                    $("#selectLocalidad").empty();
                    $("#selectLocalidad").append('<option value="">Seleccione una Localidad</option>');
                    $.each(response.data, function (index, item) {
                        $("<option>").attr({ "value": item.Id_Localidad }).text(item.Barrio).appendTo("#selectLocalidad");
                    });
                },
                error: function (error) {
                    console.log("Error al cargar localidades:", error);
                }
            });
        }

        function cargarProductos() {
            $.ajax({
                url: '@Url.Action("ListarProducto", "Mantenedor")',
                type: "GET",
                dataType: "json",
                success: function (data) {
                    $.each(data.data, function (index, item) {
                        $("<option>")
                            .attr({ "value": item.Id_Producto, "data-precio": item.Precio })
                            .text(item.Nombre)
                            .appendTo("#selectProducto");
                    });
                },
                error: function (error) {
                    console.log("Error al cargar productos:", error);
                }
            });
        }

        function agregarProductoSeleccionado() {
            var productoId = $("#selectProducto").val();
            var productoNombre = $("#selectProducto option:selected").text();
            var precioProducto = parseFloat($("#selectProducto option:selected").data('precio')) || 0;
            var cantidad = parseInt($("#txtCantidad").val()) || 1;

            if (!productoId || cantidad <= 0) {
                alert("Seleccione un producto válido y una cantidad mayor a 0.");
                return;
            }

            // Verificar si el producto ya fue seleccionado
            var productoExistente = productosSeleccionados.find(p => p.Id_Producto === parseInt(productoId));
            if (productoExistente) {
                productoExistente.Cantidad += cantidad; // Actualizar la cantidad
                productoExistente.Subtotal += precioProducto * cantidad; // Actualizar el subtotal
            } else {
                // Agregar nuevo producto
                productosSeleccionados.push({
                    Id_Producto: parseInt(productoId),
                    Nombre: productoNombre,
                    Precio: precioProducto,
                    Cantidad: cantidad,
                    Subtotal: precioProducto * cantidad
                });
            }

            actualizarListadoProductos();
        }

        function actualizarListadoProductos() {
            var totalPago = 0;
            $("#listaProductosSeleccionados").empty(); // Limpiar la lista visual

            productosSeleccionados.forEach(producto => {
                totalPago += producto.Subtotal;

                // Mostrar cada producto en la lista
                $("#listaProductosSeleccionados").append(
                    `<li>${producto.Nombre} - Cantidad: ${producto.Cantidad} - Precio: $${producto.Precio.toFixed(2)} - Subtotal: $${producto.Subtotal.toFixed(2)}</li>`
                );
            });

            // Actualizar el total acumulado
            $("#visibleTotalPago").val(totalPago.toFixed(2));
            $("#hiddenTotalPago").val(totalPago.toFixed(2));
        }

        function crearVenta() {
            var idCliente = $("#selectCliente").val();
            var idLocalidad = $("#selectLocalidad").val();
            var totalPago = parseFloat($("#hiddenTotalPago").val()) || 0;

            if (!idCliente || !idLocalidad || productosSeleccionados.length === 0) {
                alert("Por favor, complete todos los campos obligatorios.");
                return;
            }

            var ventaViewModel = {
                Id_Cliente: parseInt(idCliente),
                Id_Localidad: parseInt(idLocalidad),
                Productos: productosSeleccionados,
                Fecha_Venta: new Date().toISOString(),
                Total_Pago: totalPago
            };

            $.ajax({
                url: '@Url.Action("RegistrarVenta", "Home")',
                type: "POST",
                data: JSON.stringify(ventaViewModel),
                contentType: "application/json",
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert("Error al registrar la venta.");
                    }
                },
                error: function (error) {
                    console.log("Error al registrar la venta:", error);
                }
            });
        }
    </script>
}
